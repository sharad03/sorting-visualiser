{"version":3,"sources":["sortingalgorithms/mergesort.js","sortingalgorithms/quicksort.js","sortingalgorithms/heapsort.js","sortingVisuliser/sortingVisuliser.js","sortingalgorithms/bubblesort.js","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animation","lenght","auxiliaryArray","slice","mergeSortHelper","mainArray","startIndex","endIndex","midIndex","Math","floor","startIdx","midIdx","endIdx","k","i","j","push","doMerge","length","getQuickSortAnimations","quickSort","index","left","right","pivot","temp","partition","getHeapSortAnimations","len","array_length","heap_root","swap1","heapSort","max","swap","PRIMARY","sortingVisuliser","props","state","this","resetArray","randomIntFromInterval","backgroundColor","setState","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","newHeight","height","p","arraylen","bubbleSort","getBubbleSortAnimations","sort","a","b","className","map","value","idx","key","onClick","mergeSort","React","Component","min","random","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.61de1975.chunk.js","sourcesContent":["export function getMergeSortAnimations(array){\r\n    const animation = [];\r\n    if(array.lenght <= 1)return array;\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array,0,array.length - 1, auxiliaryArray,animation);\r\n    return animation;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n    mainArray,\r\n    startIndex,\r\n    endIndex,\r\n    auxiliaryArray,\r\n    animation,\r\n){\r\n    if(startIndex === endIndex) return;\r\n    const midIndex=Math.floor((startIndex+endIndex) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIndex, midIndex, mainArray,animation);\r\n    mergeSortHelper(auxiliaryArray,midIndex + 1, endIndex, mainArray,animation);\r\n    doMerge(mainArray, startIndex, midIndex,endIndex, auxiliaryArray,animation);\r\n}\r\n\r\nfunction doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    midIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animation,\r\n) {\r\n    let k=startIdx;\r\n    let i=startIdx;\r\n    let j=midIdx+1;\r\n    while(i<=midIdx && j<=endIdx){\r\n        animation.push([i, j]);\r\n        animation.push([i, j]);\r\n        if(auxiliaryArray[i] <= auxiliaryArray[j]){\r\n            animation.push([k, auxiliaryArray[i]]);\r\n            mainArray[k++]=auxiliaryArray[i++];\r\n        }else{\r\n            animation.push([k, auxiliaryArray[j]]);\r\n            mainArray[k++]=auxiliaryArray[j++];\r\n        }\r\n    }\r\n\r\n    while(i<=midIdx){\r\n        animation.push([i, i]);\r\n        animation.push([i, i]);\r\n        animation.push([k, auxiliaryArray[i]]);\r\n        mainArray[k++]=auxiliaryArray[i++];\r\n    }\r\n\r\n    while(j<=endIdx){\r\n        animation.push([j, j]);\r\n        animation.push([j, j]);\r\n        animation.push([k, auxiliaryArray[j]]);\r\n        mainArray[k++]=auxiliaryArray[j++];\r\n    }\r\n}","export function getQuickSortAnimations(array){\r\n    const animation = [];\r\n    if(array.lenght <= 1)return array;\r\n    const auxiliaryArray = array.slice();\r\n    quickSort(0,array.length-1, auxiliaryArray,animation);\r\n    return animation;\r\n}\r\n\r\nfunction quickSort(\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animation,\r\n){\r\n    if(startIdx<endIdx){\r\n        let index=partition(auxiliaryArray,startIdx,endIdx,animation);\r\n        if(startIdx<index-1)quickSort(startIdx,index-1,auxiliaryArray,animation);\r\n        if(index-1<endIdx)quickSort(index+1,endIdx,auxiliaryArray,animation);\r\n    }\r\n}\r\n\r\nfunction partition(\r\n    auxiliaryArray,\r\n    left,\r\n    right,\r\n    animation,\r\n){\r\n    let pivot=auxiliaryArray[right];\r\n    animation.push([right,auxiliaryArray[right],2]);\r\n        let i=left-1;\r\n    for(let j=left;j<=right-1;j++){\r\n        animation.push([j,auxiliaryArray[j],1]);\r\n        if(auxiliaryArray[j]<pivot){\r\n            i++;\r\n            animation.push([i,auxiliaryArray[i],3]);\r\n            animation.push([j,auxiliaryArray[j],3]);\r\n            let temp=auxiliaryArray[i];\r\n            auxiliaryArray[i]=auxiliaryArray[j];\r\n            auxiliaryArray[j]=temp;\r\n            animation.push([i,auxiliaryArray[i],4]);\r\n            animation.push([j,auxiliaryArray[j],4]);\r\n            animation.push([i,auxiliaryArray[i],0]);\r\n            animation.push([j,auxiliaryArray[j],0]);\r\n        }else{\r\n            animation.push([j,auxiliaryArray[j],0]);\r\n        }\r\n    }\r\n    animation.push([i+1,auxiliaryArray[i+1],3]);\r\n    animation.push([right,auxiliaryArray[right],3]);\r\n    let temp=auxiliaryArray[i+1];\r\n    auxiliaryArray[i+1]=auxiliaryArray[right];\r\n    auxiliaryArray[right]=temp;\r\n    animation.push([i+1,auxiliaryArray[i+1],4]);\r\n    animation.push([right,auxiliaryArray[right],4]);\r\n    animation.push([i+1,auxiliaryArray[i+1],0]);\r\n    animation.push([right,auxiliaryArray[right],0]);\r\n    i++;\r\n\r\n    return i;\r\n}","export function getHeapSortAnimations(array){\r\n    const animation = [];\r\n    if(array.lenght <= 1)return array;\r\n    const auxiliaryArray = array.slice();\r\n    heapSort(auxiliaryArray,array.length, animation);\r\n    return animation;\r\n}\r\n\r\nfunction heap_root(auxiliaryArray, i , len, animation) {\r\n    var left = 2 * i + 1;\r\n    var right = 2 * i + 2;\r\n    var max = i;\r\n    var array_length=len\r\n    if(left<len){\r\n        animation.push([left, auxiliaryArray[left],1]);\r\n    }\r\n    if(right<len){\r\n        animation.push([right, auxiliaryArray[right],1]);\r\n    }\r\n    animation.push([max, auxiliaryArray[max],1]);\r\n\r\n    if (left < array_length && auxiliaryArray[left] > auxiliaryArray[max]) {\r\n        max = left;\r\n    }\r\n\r\n    if (right < array_length && auxiliaryArray[right] > auxiliaryArray[max])     {\r\n        max = right;\r\n    }\r\n\r\n    if (max !== i) {\r\n        swap(auxiliaryArray, i, max ,animation);\r\n        heap_root(auxiliaryArray, max, len, animation);\r\n    }\r\n\r\n    if(left<len){\r\n        animation.push([left, auxiliaryArray[left],0]);\r\n    }\r\n    if(right<len){\r\n        animation.push([right, auxiliaryArray[right],0]);\r\n    }\r\n    animation.push([max, auxiliaryArray[max],0]);\r\n}\r\n\r\nfunction swap(auxiliaryArray, i, max, animation) {\r\n    \r\n    animation.push([max, auxiliaryArray[max],2]);\r\n    animation.push([i, auxiliaryArray[i],2]);\r\n\r\n    let temp = auxiliaryArray[i];\r\n    auxiliaryArray[i] = auxiliaryArray[max];\r\n    auxiliaryArray[max] = temp;\r\n\r\n    animation.push([max, auxiliaryArray[max],3]);\r\n    animation.push([i, auxiliaryArray[i],3]);\r\n}\r\n\r\nfunction swap1(auxiliaryArray, i, max, animation) {\r\n    \r\n    animation.push([max, auxiliaryArray[max],2]);\r\n    animation.push([i, auxiliaryArray[i],2]);\r\n\r\n    let temp = auxiliaryArray[i];\r\n    auxiliaryArray[i] = auxiliaryArray[max];\r\n    auxiliaryArray[max] = temp;\r\n\r\n    animation.push([max, auxiliaryArray[max],4]);\r\n    animation.push([i, auxiliaryArray[i],0]);\r\n}\r\n\r\nfunction heapSort(auxiliaryArray,len,animation) {\r\n    \r\n     var array_length = len;\r\n\r\n    for (var i = Math.floor(array_length / 2); i >= 0; i -= 1)      {\r\n        heap_root(auxiliaryArray, i, len ,animation);\r\n      }\r\n\r\n    for (let i = len - 1; i > 0; i--) {\r\n        swap1(auxiliaryArray, 0, i, animation);\r\n        array_length--;\r\n        heap_root(auxiliaryArray, 0, array_length, animation);\r\n    }\r\n    animation.push([0,auxiliaryArray[0],4]);\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {getMergeSortAnimations}  from '../sortingalgorithms/mergesort.js'\r\nimport {getBubbleSortAnimations} from '../sortingalgorithms/bubblesort.js'\r\nimport {getQuickSortAnimations}  from '../sortingalgorithms/quicksort.js'\r\nimport {getHeapSortAnimations}   from '../sortingalgorithms/heapsort.js'\r\n\r\nimport './sortingVisuliser.css';\r\n\r\nconst animationSpeed = 6;\r\nconst PRIMARY = 'turquoise';\r\nconst SECONDARY = 'red';\r\nconst TERTIARY = 'yellow';\r\n\r\n\r\nexport default class sortingVisuliser extends React.Component {\r\n   \r\n  constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.resetArray();\r\n    }\r\n\r\n\r\n    resetArray(){\r\n\r\n        const array = [];\r\n\r\n        for(let i=0;i<100; i++){\r\n            array.push(randomIntFromInterval(10,550));\r\n        }\r\n        //const arrayBars= document.getElementsByClassName('array-bar');\r\n        array.backgroundColor='blue';\r\n        this.setState({array});\r\n    }\r\n\r\n\r\n\r\n    mergeSort() {\r\n\r\n        const animation=getMergeSortAnimations(this.state.array);\r\n\r\n        for(let i=0;i< animation.length ; i++){\r\n            const arrayBars= document.getElementsByClassName('array-bar');\r\n            const colorChange = i%3 !==2;\r\n\r\n            if (colorChange) {\r\n                const [barOneIdx, barTwoIdx] = animation[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 3 === 0 ? SECONDARY : PRIMARY;\r\n                \r\n                setTimeout(() => {\r\n                  barOneStyle.backgroundColor = color;\r\n                  barTwoStyle.backgroundColor = color;\r\n                }, i * animationSpeed);\r\n\r\n              } else {\r\n                \r\n                setTimeout(() => {\r\n                  const [barOneIdx, newHeight] = animation[i];\r\n                  const barOneStyle = arrayBars[barOneIdx].style;\r\n                  barOneStyle.height = `${newHeight}px`;\r\n                }, i * animationSpeed);\r\n\r\n              }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    heapSort() {\r\n\r\n        const animation=getHeapSortAnimations(this.state.array);\r\n\r\n        for(let i=0;i< animation.length ; i++){\r\n\r\n            const arrayBars= document.getElementsByClassName('array-bar');\r\n               \r\n            setTimeout(() => {\r\n                  const p = animation[i];\r\n                  //console.log(p[0],p[1],p[2]);\r\n                  const barOneStyle = arrayBars[p[0]].style;\r\n\r\n                  if(p[2]===2){\r\n                    barOneStyle.backgroundColor= SECONDARY;\r\n                  }else if(p[2]===0){\r\n                    barOneStyle.backgroundColor=PRIMARY;\r\n                  }else if(p[2] === 1){\r\n                    barOneStyle.backgroundColor= TERTIARY;\r\n                  } else if(p[2] === 3){\r\n                    barOneStyle.backgroundColor= PRIMARY;\r\n                  }else if(p[2] === 4){\r\n                    barOneStyle.backgroundColor= '#00e500';\r\n                  }\r\n                  barOneStyle.height = `${p[1]}px`;\r\n\r\n                }, i * 4);\r\n        }\r\n        //console.log(animation.length);\r\n    }\r\n\r\n\r\n\r\n    quickSort(){\r\n\r\n        const animation=getQuickSortAnimations(this.state.array);\r\n\r\n        for(let i=0;i< animation.length ; i++){\r\n\r\n            const arrayBars= document.getElementsByClassName('array-bar');\r\n                \r\n            setTimeout(() => {\r\n                  const p = animation[i];\r\n                  const barOneStyle = arrayBars[p[0]].style;\r\n                  \r\n                  if(p[2]===2){\r\n                    barOneStyle.backgroundColor= SECONDARY;\r\n                  }else if(p[2]===0){\r\n                    barOneStyle.backgroundColor=PRIMARY;\r\n                  }else if(p[2] === 1){\r\n                    barOneStyle.backgroundColor= TERTIARY;\r\n                  } else if(p[2] === 3){\r\n                    barOneStyle.backgroundColor= 'blue';\r\n                  }else if(p[2] === 4){\r\n                    barOneStyle.backgroundColor= 'green';\r\n                  }\r\n                  barOneStyle.height = `${p[1]}px`;\r\n\r\n                }, i * 4);\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    bubbleSort() {\r\n       \r\n      const animation=getBubbleSortAnimations(this.state.array);\r\n      \r\n      for(let i=0;i< animation.length ; i++){\r\n            \r\n        const arrayBars= document.getElementsByClassName('array-bar');\r\n        const colorChange = i%4 !==1 && i%4!==2;\r\n            \r\n        if (colorChange) {\r\n                const [barOneIdx, barTwoIdx] = animation[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 4 === 0 ? SECONDARY : PRIMARY;\r\n                \r\n                setTimeout(() => {\r\n                  barOneStyle.backgroundColor = color;\r\n                  barTwoStyle.backgroundColor = color;\r\n                }, i * 0.5 );\r\n              \r\n              } else {\r\n               \r\n                setTimeout(() => {\r\n                  const [barOneIdx, newHeight] = animation[i];\r\n                  const barOneStyle = arrayBars[barOneIdx].style;\r\n                  barOneStyle.height = `${newHeight}px`;\r\n                }, i * 0.5);\r\n              \r\n              }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    testSortingAlgorithm(){\r\n        const array = [];\r\n        const length = randomIntFromInterval(1,1000);\r\n\r\n        for(let i=0; i<length; i++){\r\n            array.push(randomIntFromInterval(-1000,1000));\r\n        }\r\n\r\n        const javaScriptSortedArray = array.slice().sort((a,b) => a-b);\r\n        const mergeSortArray = getMergeSortAnimations(array.slice());\r\n        \r\n        //console.log(arrayAreEqual(javaScriptSortedArray,mergeSortArray));\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n        const {array}= this.state;\r\n       \r\n        return(\r\n            <div className=\"array-container\">\r\n            <h1 className=\"head\">Sorting Visuliser</h1>\r\n            <br/>\r\n            \r\n            {array.map((value, idx)=>(\r\n               \r\n               <div className=\"array-bar\"\r\n                 key={idx}\r\n                 style={{\r\n                     backgroundColor: PRIMARY,\r\n                     height: `${value}px`,\r\n                 }}> \r\n                </div>\r\n            ))}\r\n\r\n            <br/>\r\n            \r\n            <button onClick={()=>this.resetArray()} className=\"button\">Generate New Array</button> &nbsp;\r\n            <button onClick={()=>this.mergeSort()}className=\"button\">Merge Sort</button> &nbsp;\r\n            <button onClick={() => this.quickSort()}className=\"button\">Quick Sort</button> &nbsp;\r\n            <button onClick={() => this.heapSort()}className=\"button\">Heap Sort</button> &nbsp;\r\n            <button onClick={()=>this.bubbleSort()}className=\"button\">Bubble Sort</button>&nbsp;\r\n            {/*<button onClick={() => this.testSortingAlgorithm()}>TEST ALGO</button>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n//gernerating random no.\r\nfunction randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n  \r\nfunction arrayAreEqual(\r\n    arrayOne,\r\n    arrayTwo,\r\n){\r\n    if(arrayOne.length!==arrayTwo.length)return false;\r\n    for(let i=0 ;i<arrayTwo.length;i++){\r\n        if(arrayOne[i]!==arrayTwo[i]){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}","export function getBubbleSortAnimations(array){\r\n    const animation = [];\r\n    if(array.lenght <= 1)return array;\r\n    const auxiliaryArray = array.slice();\r\n    bubbleSort(array.length, auxiliaryArray,animation);\r\n    return animation;\r\n}\r\n\r\nfunction bubbleSort(\r\n    arraylen,\r\n    auxiliaryArray,\r\n    animation,\r\n){\r\n\r\n    for(let i=0;i<arraylen ; i++){\r\n\r\n        for(let j=0;j<(arraylen-i-1); j++){\r\n\r\n            animation.push([j,j+1]);\r\n\r\n            if(auxiliaryArray[j]>auxiliaryArray[j+1]){\r\n                let temp=auxiliaryArray[j];\r\n                auxiliaryArray[j]=auxiliaryArray[j+1];\r\n                auxiliaryArray[j+1]=temp;\r\n            }\r\n\r\n            animation.push([j,   auxiliaryArray[j]]);\r\n            animation.push([j+1, auxiliaryArray[j+1]]);\r\n            animation.push([j,j+1]);\r\n        }\r\n       // animation.push([arraylen-i-1,arraylen-i-1]);\r\n    }\r\n}","import React from 'react';\nimport SortingVisuliser from './sortingVisuliser/sortingVisuliser';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      <SortingVisuliser></SortingVisuliser>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}